# GitHub Action for Symfony with MySQL
name: Deploy the application
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer:v2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
           node-version: ${{ matrix.node-version }}
           cache: 'npm'
        
      - name: Install npm dependencies
        run: npm ci

      - name: Build the frontend
        run: npm run build

      # Prepare .env file for production
      - name: Make production envfile
        uses: SpicyPizza/create-envfile@v2
        with:
          envkey_DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony
          envkey_APP_ENV: prod
          envkey_APP_DEBUG: false
          envkey_APP_SECRET: ${{ secrets.APP_SECRET }}
          file_name: .env

      # Copying files and artifacts via SSH to a temporary sync folder
      - name: Copying files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          passphrase: ''
          rm: true
          source: "./"
          target: ${{ secrets.REMOTE_TARGET }}
      
      # Run commands on production
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          passphrase: ''
          script: |
            rsync -a --exclude={'var','temp'} --delete ${{ secrets.REMOTE_TARGET }} ${{ secrets.REMOTE_TARGET_DEPLOY }}
            composer require --dev symfony/orm-pack
            php bin/console doctrine:schema:drop --full-database --force || echo "Cannot drop the schema"
            php bin/console doctrine:migrations:migrate --no-interaction || echo "No migrations found or migration failed"
            php bin/console doctrine:fixtures:load --no-interaction || echo "Loading fixtures failed"
          
